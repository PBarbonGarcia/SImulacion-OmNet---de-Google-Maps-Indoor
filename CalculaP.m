function [P] = CalculaP( XY1,XY2,XY3,d1,d2,d3)
%Las variables de entrada seran la posicion de los AccessPoints XY1,XY2,XY3 y las
%distancias de los mismos al usuario, d1,d2,d3
%Función CalculaP, calcula la intersección de tres circunferencias y nos da
%el punto de corte, que será las coordenadas X,Y donde se encuentre el
%usuario


X1=(XY1(1)^2 + XY1(2)^2 - XY2(1)^2 - XY2(2)^2 - d1^2 + d2^2 - (XY1(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY2(1)^2 + XY1(1)^2*XY2(2) - XY1(2)*XY2(2)^2 - XY1(2)^2*XY2(2) + XY2(1)^2*XY2(2) - d1^2*XY1(2) + d1^2*XY2(2) + d2^2*XY1(2) - d2^2*XY2(2) + XY1(2)^3 + XY2(2)^3 - XY1(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) + XY2(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY2(1) - 2*XY1(1)*XY2(1)*XY2(2)))/(XY1(1)^2 - 2*XY1(2)*XY2(2) - 2*XY1(1)*XY2(1) + XY1(2)^2 + XY2(1)^2 + XY2(2)^2) + (XY2(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY2(1)^2 + XY1(1)^2*XY2(2) - XY1(2)*XY2(2)^2 - XY1(2)^2*XY2(2) + XY2(1)^2*XY2(2) - d1^2*XY1(2) + d1^2*XY2(2) + d2^2*XY1(2) - d2^2*XY2(2) + XY1(2)^3 + XY2(2)^3 - XY1(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) + XY2(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY2(1) - 2*XY1(1)*XY2(1)*XY2(2)))/(XY1(1)^2 - 2*XY1(2)*XY2(2) - 2*XY1(1)*XY2(1) + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))/(2*XY1(1) - 2*XY2(1));

X2=(XY1(1)^2 + XY1(2)^2 - XY2(1)^2 - XY2(2)^2 - d1^2 + d2^2 - (XY1(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY2(1)^2 + XY1(1)^2*XY2(2) - XY1(2)*XY2(2)^2 - XY1(2)^2*XY2(2) + XY2(1)^2*XY2(2) - d1^2*XY1(2) + d1^2*XY2(2) + d2^2*XY1(2) - d2^2*XY2(2) + XY1(2)^3 + XY2(2)^3 + XY1(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - XY2(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY2(1) - 2*XY1(1)*XY2(1)*XY2(2)))/(XY1(1)^2 - 2*XY1(2)*XY2(2) - 2*XY1(1)*XY2(1) + XY1(2)^2 + XY2(1)^2 + XY2(2)^2) + (XY2(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY2(1)^2 + XY1(1)^2*XY2(2) - XY1(2)*XY2(2)^2 - XY1(2)^2*XY2(2) + XY2(1)^2*XY2(2) - d1^2*XY1(2) + d1^2*XY2(2) + d2^2*XY1(2) - d2^2*XY2(2) + XY1(2)^3 + XY2(2)^3 + XY1(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - XY2(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY2(1) - 2*XY1(1)*XY2(1)*XY2(2)))/(XY1(1)^2 - 2*XY1(2)*XY2(2) - 2*XY1(1)*XY2(1) + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))/(2*XY1(1) - 2*XY2(1));
 


 Y1=(XY1(1)^2*XY1(2) + XY1(2)*XY2(1)^2 + XY1(1)^2*XY2(2) - XY1(2)*XY2(2)^2 - XY1(2)^2*XY2(2) + XY2(1)^2*XY2(2) - d1^2*XY1(2) + d1^2*XY2(2) + d2^2*XY1(2) - d2^2*XY2(2) + XY1(2)^3 + XY2(2)^3 - XY1(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) + XY2(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY2(1) - 2*XY1(1)*XY2(1)*XY2(2))/(2*(XY1(1)^2 - 2*XY1(2)*XY2(2) - 2*XY1(1)*XY2(1) + XY1(2)^2 + XY2(1)^2 + XY2(2)^2));
 Y2=(XY1(1)^2*XY1(2) + XY1(2)*XY2(1)^2 + XY1(1)^2*XY2(2) - XY1(2)*XY2(2)^2 - XY1(2)^2*XY2(2) + XY2(1)^2*XY2(2) - d1^2*XY1(2) + d1^2*XY2(2) + d2^2*XY1(2) - d2^2*XY2(2) + XY1(2)^3 + XY2(2)^3 + XY1(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - XY2(1)*((d1^2 + 2*d1*d2 + d2^2 + 2*XY1(1)*XY2(1) + 2*XY1(2)*XY2(2) - XY1(1)^2 - XY1(2)^2 - XY2(1)^2 - XY2(2)^2)*(- d1^2 + 2*d1*d2 - d2^2 - 2*XY1(1)*XY2(1) - 2*XY1(2)*XY2(2) + XY1(1)^2 + XY1(2)^2 + XY2(1)^2 + XY2(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY2(1) - 2*XY1(1)*XY2(1)*XY2(2))/(2*(XY1(1)^2 - 2*XY1(2)*XY2(2) - 2*XY1(1)*XY2(1) + XY1(2)^2 + XY2(1)^2 + XY2(2)^2));
 


 X3=(XY1(1)^2 + XY1(2)^2 - XY3(1)^2 - XY3(2)^2 - d1^2 + d3^2 - (XY1(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY3(1)^2 + XY1(1)^2*XY3(2) - XY1(2)*XY3(2)^2 - XY1(2)^2*XY3(2) + XY3(1)^2*XY3(2) - d1^2*XY1(2) + d1^2*XY3(2) + d3^2*XY1(2) - d3^2*XY3(2) + XY1(2)^3 + XY3(2)^3 - XY1(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) + XY3(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY3(1) - 2*XY1(1)*XY3(1)*XY3(2)))/(XY1(1)^2 - 2*XY1(2)*XY3(2) - 2*XY1(1)*XY3(1) + XY1(2)^2 + XY3(1)^2 + XY3(2)^2) + (XY3(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY3(1)^2 + XY1(1)^2*XY3(2) - XY1(2)*XY3(2)^2 - XY1(2)^2*XY3(2) + XY3(1)^2*XY3(2) - d1^2*XY1(2) + d1^2*XY3(2) + d3^2*XY1(2) - d3^2*XY3(2) + XY1(2)^3 + XY3(2)^3 - XY1(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) + XY3(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY3(1) - 2*XY1(1)*XY3(1)*XY3(2)))/(XY1(1)^2 - 2*XY1(2)*XY3(2) - 2*XY1(1)*XY3(1) + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))/(2*XY1(1) - 2*XY3(1));
 X4=(XY1(1)^2 + XY1(2)^2 - XY3(1)^2 - XY3(2)^2 - d1^2 + d3^2 - (XY1(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY3(1)^2 + XY1(1)^2*XY3(2) - XY1(2)*XY3(2)^2 - XY1(2)^2*XY3(2) + XY3(1)^2*XY3(2) - d1^2*XY1(2) + d1^2*XY3(2) + d3^2*XY1(2) - d3^2*XY3(2) + XY1(2)^3 + XY3(2)^3 + XY1(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - XY3(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY3(1) - 2*XY1(1)*XY3(1)*XY3(2)))/(XY1(1)^2 - 2*XY1(2)*XY3(2) - 2*XY1(1)*XY3(1) + XY1(2)^2 + XY3(1)^2 + XY3(2)^2) + (XY3(2)*(XY1(1)^2*XY1(2) + XY1(2)*XY3(1)^2 + XY1(1)^2*XY3(2) - XY1(2)*XY3(2)^2 - XY1(2)^2*XY3(2) + XY3(1)^2*XY3(2) - d1^2*XY1(2) + d1^2*XY3(2) + d3^2*XY1(2) - d3^2*XY3(2) + XY1(2)^3 + XY3(2)^3 + XY1(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - XY3(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY3(1) - 2*XY1(1)*XY3(1)*XY3(2)))/(XY1(1)^2 - 2*XY1(2)*XY3(2) - 2*XY1(1)*XY3(1) + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))/(2*XY1(1) - 2*XY3(1));
 

 
 Y3=(XY1(1)^2*XY1(2) + XY1(2)*XY3(1)^2 + XY1(1)^2*XY3(2) - XY1(2)*XY3(2)^2 - XY1(2)^2*XY3(2) + XY3(1)^2*XY3(2) - d1^2*XY1(2) + d1^2*XY3(2) + d3^2*XY1(2) - d3^2*XY3(2) + XY1(2)^3 + XY3(2)^3 - XY1(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) + XY3(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY3(1) - 2*XY1(1)*XY3(1)*XY3(2))/(2*(XY1(1)^2 - 2*XY1(2)*XY3(2) - 2*XY1(1)*XY3(1) + XY1(2)^2 + XY3(1)^2 + XY3(2)^2));
 Y4=(XY1(1)^2*XY1(2) + XY1(2)*XY3(1)^2 + XY1(1)^2*XY3(2) - XY1(2)*XY3(2)^2 - XY1(2)^2*XY3(2) + XY3(1)^2*XY3(2) - d1^2*XY1(2) + d1^2*XY3(2) + d3^2*XY1(2) - d3^2*XY3(2) + XY1(2)^3 + XY3(2)^3 + XY1(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - XY3(1)*((d1^2 + 2*d1*d3 + d3^2 + 2*XY1(1)*XY3(1) + 2*XY1(2)*XY3(2) - XY1(1)^2 - XY1(2)^2 - XY3(1)^2 - XY3(2)^2)*(- d1^2 + 2*d1*d3 - d3^2 - 2*XY1(1)*XY3(1) - 2*XY1(2)*XY3(2) + XY1(1)^2 + XY1(2)^2 + XY3(1)^2 + XY3(2)^2))^(1/2) - 2*XY1(1)*XY1(2)*XY3(1) - 2*XY1(1)*XY3(1)*XY3(2))/(2*(XY1(1)^2 - 2*XY1(2)*XY3(2) - 2*XY1(1)*XY3(1) + XY1(2)^2 + XY3(1)^2 + XY3(2)^2));

P1=[X1, Y1];
P2=[X2, Y2];
P3=[X3, Y3];
P4=[X4, Y4];

if P1==P3
    P=P1;
else
    false;
    if P2==P4;
        P=P2;
    else
        false;
       if P1==P4
            P=P1;
       else
           false;
           if P2==P3
               P=P2;
           else
               false;
           end
       end
    end
end
end
